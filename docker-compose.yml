services:
  happy-server:
    image: ghcr.io/dscxio/happy-server:latest
    ports:
      - "3050:3050"
    restart: unless-stopped
    pull_policy: always
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgresss@postgres:5432/happy-server
      - REDIS_URL=redis://redis:6379
      - HANDY_MASTER_SECRET=${HANDY_MASTER_SECRET}
      - PORT=3050
      - S3_HOST=minio
      - S3_PORT=9000
      - S3_USE_SSL=false
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_BUCKET=happy
      - S3_PUBLIC_URL=http://minio:9000/happy
    networks:
      - dokploy-network
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  migrate:
    image: ghcr.io/dscxio/happy-server:latest
    pull_policy: always
    command: yarn prisma migrate deploy
    environment:
      DATABASE_URL: postgresql://postgres:postgresss@postgres:5432/happy-server
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dokploy-network
    volumes:
      - ./prisma:/app/prisma

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=happy-server
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgresss
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dokploy-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    networks:
      - dokploy-network
    volumes:
      - redis_data:/data

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    # Include if you want to access the admin console
    # ports:
      # - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    networks:
      - dokploy-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-init:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - dokploy-network
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 minioadmin minioadmin;
      mc mb myminio/happy || true;
      mc anonymous set download myminio/happy;
      exit 0;
      "

volumes:
  postgres_data:
  redis_data:
  minio_data:


networks:
  dokploy-network:
    external: true